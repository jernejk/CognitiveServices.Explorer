@using Microsoft.AspNetCore.Components;
@inject NavigationManager navigationManager

@{
    var isGitHub = navigationManager.BaseUri.IndexOf("jernejk.github.io", StringComparison.OrdinalIgnoreCase) > 0;
    var homeUrl = isGitHub ? "/CognitiveServices.Explorer/" : "/";
}

    <MatNavMenu Multi="true" Class="app-sidebar">
        <MatNavItem Href="@homeUrl">
            <MatIcon>home</MatIcon> <span class="miniHover">Home page</span>
        </MatNavItem>

        @*<MatNavItem Href="@navigationManager.ToAbsoluteUri("todo_list").AbsoluteUri">
            <MatIcon>list_alt</MatIcon> <span class="miniHover">Todo List</span>
        </MatNavItem>*@

        <MatNavSubMenu Expanded="true">
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">
                    <MatIcon>face</MatIcon><span class="miniHover"> Face API</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="face/v1.0/persongroups">
                    <MatIcon>code</MatIcon> <span class="miniHover">Explore</span>
                </MatNavItem>
                <MatNavItem Href="face/v1.0/detect">
                    <MatIcon>camera_alt</MatIcon> <span class="miniHover">Detect/Identify</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>

        <MatNavItem Href="text">
            <MatIcon>subject</MatIcon> <span class="miniHover"> Text API (beta)</span>
        </MatNavItem>

        <MatNavItem Href="speech">
            <MatIcon>headset_mic</MatIcon> <span class="miniHover"> Speech API (alpha)</span>
        </MatNavItem>

        <MatNavItem Href="forms/custom/analyze">
            <MatIcon>receipt</MatIcon> <span class="miniHover"> Form Recognizer (alpha)</span>
        </MatNavItem>

        @*<MatNavSubMenu Expanded="true">
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false">
                    <MatIcon>headset_mic</MatIcon><span class="miniHover"> Speech API</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="speech">
                    <MatIcon>hot_tub</MatIcon> <span class="miniHover">Prototype</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>*@

        @*<MatNavItem Href="@navigationManager.ToAbsoluteUri("dashboard").AbsoluteUri" Disabled="@(!IsLoggedIn)">
            <MatIcon>bar_chart</MatIcon> <span class="miniHover">Dashboard</span>
        </MatNavItem>

        <MatNavSubMenu>
            <MatNavSubMenuHeader>
                <MatNavItem AllowSelection="false" Disabled="@(!IsLoggedIn)">
                    <MatIcon>mail_outline</MatIcon>
                    <span class="miniHover"> Email</span>
                </MatNavItem>
            </MatNavSubMenuHeader>
            <MatNavSubMenuList>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("email_view").AbsoluteUri" Disabled="@(!IsLoggedIn)">
                    <MatIcon>inbox</MatIcon> <span class="miniHover">Read Email</span>
                </MatNavItem>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("email").AbsoluteUri" Disabled="@(!IsLoggedIn)">
                    <MatIcon>send</MatIcon> <span class="miniHover">Send Email</span>
                </MatNavItem>
            </MatNavSubMenuList>
        </MatNavSubMenu>

        <MatNavItem Href="@navigationManager.ToAbsoluteUri("admin/users").AbsoluteUri" Disabled="@(!IsLoggedIn)">
            <MatIcon>supervisor_account</MatIcon> <span class="miniHover">Users</span>
        </MatNavItem>

        <MatNavItem Href="@navigationManager.ToAbsoluteUri("forum").AbsoluteUri" Disabled="@(!IsLoggedIn)">
            <MatIcon>forum</MatIcon> <span class="miniHover">Forum</span>
        </MatNavItem>

        <MatNavItem Href="@navigationManager.ToAbsoluteUri("sponsors").AbsoluteUri">
            <MatIcon>attach_money</MatIcon> <span class="miniHover">Sponsors</span>
        </MatNavItem>*@
    </MatNavMenu>

@code {
    public bool IsLoggedIn = false;

    //[CascadingParameter]
    //Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        //IsLoggedIn = false;
        //var user = (await authenticationStateTask).User;

        //if (user.Identity.IsAuthenticated)
        //{
        //    IsLoggedIn = true;
        //}

        //https://gist.github.com/SteveSandersonMS/175a08dcdccb384a52ba760122cd2eda Examples
        //if (user.IsInRole("Admin"))
        //{
        // Perform some action only available to users in the 'admin' role
        //}
    }
}