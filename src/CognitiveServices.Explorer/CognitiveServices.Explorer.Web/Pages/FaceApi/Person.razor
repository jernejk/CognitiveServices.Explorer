@page "/face/v1.0/persongroups/{PersonGroupId}/persons/{PersonId}"
@using CognitiveServices.Explorer.Application.ViewModels.FaceApi
@using CognitiveServices.Explorer.Domain.Face
@using CognitiveServices.Explorer.Web.Pages.FaceApi.Components
@inject PersonViewModel viewModel

<FaceApiConfiguration />

<div class="content">
    @if (viewModel.Person != null)
    {
        var imageUrl = string.Empty;
        if (!string.IsNullOrWhiteSpace(viewModel.Person.UserData) && viewModel.Person.UserData.StartsWith("{"))
        {
            var customUserData = Newtonsoft.Json.JsonConvert.DeserializeObject<UserDataWithImageUrl>(viewModel.Person.UserData);
            imageUrl = customUserData.GetImageUrl();
        }

        <div class="card">
            <h5 class="card-header">Person details</h5>
            <div class="card-body">
                @if (!string.IsNullOrWhiteSpace(imageUrl))
                {
                    <img class="card-img-top" src="@imageUrl" alt="@viewModel.Person.Name's image" style="max-width: 200px;">
                }
                <h5 class="card-title">@viewModel.Person.Name</h5>
                <p class="card-text">Person ID: @viewModel.Person.PersonId</p>
                <p class="card-text">Faces:</p>
                <ul>
                    @foreach (var face in viewModel.Person.PersistedFaceIds)
                    {
                        <li>
                            <a href="face/v1.0/persongroups/@PersonGroupId/persons/@viewModel.Person.PersonId/persistedFaces/@face">@face</a>
                        </li>
                    }
                </ul>
            </div>

            @if (!string.IsNullOrWhiteSpace(viewModel.Person.UserData))
            {
                <div class="card-body">
                    <h5 class="card-title">User Data</h5>
                    <code>@viewModel.Person.UserData</code>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">Loading person Id @PersonId...</div>
    }

    <CurlRequest Request="viewModel.PersonRequest" ServiceConfig="viewModel.FaceApiConfig" />
</div>

@code {
    [Parameter] public string? PersonGroupId { get; set; }
    [Parameter] public string? PersonId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        viewModel.PersonGroupId = PersonGroupId;
        viewModel.PersonId = PersonId;
        await viewModel.OnInitializedAsync();
    }
}
