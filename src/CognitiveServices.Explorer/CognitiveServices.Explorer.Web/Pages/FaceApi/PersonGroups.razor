@page "/face/v1.0/persongroups"
@using CognitiveServices.Explorer.Domain.Face
@using CognitiveServices.Explorer.Web.Pages.FaceApi.Components
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<FaceApiConfiguration />

<div class="content">
    <h3>Person Groups</h3>

    <button class="btn btn-primary" @onclick="GetGroups">Get groups (1 TR)</button>

    <div class="py-2">
        @if (personGroups != null && personGroups.Any())
        {
            <table class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <th scope="col">Person Group Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Recognition Model</th>
                        <th scope="col">User Data</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in personGroups)
                    {
                        <tr>
                            <td><a href="face/v1.0/persongroups/@group.PersonGroupId/persons">@group.PersonGroupId</a></td>
                            <td>@group.Name</td>
                            <td>@group.RecogntionModel</td>
                            <td>@group.UserData</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (personGroups != null)
        {
            <div class="alert alert-warning" role="alert">No groups found</div>
        }
        else if (!string.IsNullOrWhiteSpace(error))
        {
            <div class="alert alert-danger" role="alert">@error</div>
        }
        else
        {
            <div class="alert alert-info" role="alert">Press "Get groups" to get started. (1 transaction cost)</div>
        }
    </div>

    <CurlRequest Request="requestData" />
</div>

@code {
    string faceApiKey = string.Empty;
    string faceApiBaseUrl = string.Empty;
    string rawJson = string.Empty;
    List<PersonGroupDto> personGroups = null;
    CurlRequestData requestData = new CurlRequestData
        {
            RequestName = "GET PersonGroup list"
        };
    string error = "";

    protected override async Task OnInitializedAsync()
    {
        faceApiKey = await localStorage.GetItemAsync<string>(nameof(faceApiKey));
        faceApiBaseUrl = await localStorage.GetItemAsync<string>(nameof(faceApiBaseUrl));
        UpdateRequestOutput();
    }

    public async Task GetGroups()
    {
        error = string.Empty;

        // Get the keys again just in case.
        faceApiKey = await localStorage.GetItemAsync<string>(nameof(faceApiKey));
        faceApiBaseUrl = await localStorage.GetItemAsync<string>(nameof(faceApiBaseUrl));

        HttpClient client = new HttpClient();
        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", faceApiKey);

        try
        {
            var result = await client.GetAsync(faceApiBaseUrl + "/face/v1.0/persongroups?returnRecognitionModel=true");
            rawJson = await result.Content.ReadAsStringAsync();

            UpdateRequestOutput();
            personGroups = Newtonsoft.Json.JsonConvert.DeserializeObject<List<PersonGroupDto>>(rawJson);
        }
        catch (Exception e)
        {
            error = e.ToString();
        }
    }

    public void UpdateRequestOutput()
    {
        requestData.SubscriptionKey = faceApiKey;
        requestData.Curl = $@"curl -X GET \
  '{faceApiBaseUrl}/face/v1.0/persongroups?returnRecognitionModel=true' \
  -H 'Content-Type: application/json' \
  -H 'Ocp-Apim-Subscription-Key: [token]'";
    }
}
