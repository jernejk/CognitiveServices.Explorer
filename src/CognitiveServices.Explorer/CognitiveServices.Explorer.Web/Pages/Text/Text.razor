@page "/text"
@using CognitiveServices.Explorer.Application.ViewModels.TextApi
@using CognitiveServices.Explorer.Web.Shared.Profiles
@using CognitiveServices.Explorer.Application.Text
@using CognitiveServices.Explorer.Web.Pages.FaceApi.Components
@using CognitiveServices.Explorer.Web.Pages.Text.Components
@inject TextViewModel viewModel

<ProfileSelector OnUpdated="UpdatedProfile" />

<style>
    progress[value] {
        /* Reset the default appearance */
        -webkit-appearance: none;
        appearance: none;
        width: 250px;
        height: 20px;
        background: red;
    }

    -webkit-progress-value.positive {
        background: green;
    }

    -webkit-progress-value.negative {
        background: red;
    }

    .progress-bar {
        height: 100%;
        display: inline-block;
        float: left;
    }

    .sentiment-positive {
        color: green;
    }

    .progress-bar.positive {
        background: green;
    }

    .progress-bar.neutral {
        background: #777;
    }

    .progress-bar.negative {
        background: red;
    }
</style>

<div class="content mb-3">
    <h3>Text (preview)</h3>

    @if (!viewModel.IsTextApiAvailable)
    {
        <div class="alert alert-warning" role="alert">Current profile doesn't have TextApi configuration.</div>
    }
    else
    {
        <div class="mb-3">
            <MatTextField @bind-Value="@viewModel.Text" Label="Text" Icon="account_circle" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            <MatTextField @bind-Value="@viewModel.Language" Label="Language" Icon="account_circle" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            <MatSelect id="face-api-selected-group-id" Label="Detection model" @bind-Value="viewModel.TextApiVersion" Class="mb-2">
                <MatOption Value="@TextRequestGenerator.LegacyVersion">Legacy (v@(TextRequestGenerator.LegacyVersion))</MatOption>
                <MatOption Value="@TextRequestGenerator.StableVersion">Stable (v@(TextRequestGenerator.StableVersion))</MatOption>
                <MatOption Value="@TextRequestGenerator.PreviewVersion">Preview (v@(TextRequestGenerator.PreviewVersion))</MatOption>
            </MatSelect>

            <MatButton Label="Sentiment" @onclick="viewModel.SentimentAnalysis" Raised="true"></MatButton>
            <MatButton Label="Detect language" @onclick="viewModel.DetectLanguage" Raised="true"></MatButton>
            <MatButton Label="Key phrases" @onclick="viewModel.KeyPhrasesAnalysis" Raised="true"></MatButton>
            <MatButton Label="Entities" @onclick="viewModel.EntitiesAnalysis" Raised="true"></MatButton>

            @if (viewModel.IsStableApi || viewModel.IsPreviewApi)
            {
                <MatButton Label="Entity Linking" @onclick="viewModel.EntityLinking" Raised="true"></MatButton>
            }

            @if (viewModel.IsPreviewApi)
            {
                <MatButton Label="Entity Recognition PII" @onclick="viewModel.EntityRecognitionPii" Raised="true"></MatButton>
            }
        </div>

        <Sentiment ResponseJson="@viewModel.SentimentJson" TextApiVersion="@viewModel.TextApiVersion" />
        <DetectLanguage ResponseJson="@viewModel.DetectLanguageJson" TextApiVersion="@viewModel.TextApiVersion" />
        <KeyPhrases ResponseJson="@viewModel.KeyPhraseJson" TextApiVersion="@viewModel.TextApiVersion" />
        <NamedEntities ResponseJson="@viewModel.EntitiesJson" TextApiVersion="@viewModel.TextApiVersion" />

        if (!string.IsNullOrWhiteSpace(viewModel.EntityLinkingJson))
        {
            <h4>Entity Linking</h4>
            <code>@viewModel.EntityLinkingJson</code>
        }

        if (!string.IsNullOrWhiteSpace(viewModel.EntityRecognitionPiiJson))
        {
            <h4>Entity Recognition PII</h4>
            <code>@viewModel.EntityRecognitionPiiJson</code>
        }

        if (!string.IsNullOrWhiteSpace(viewModel.Error))
        {
            <div class="alert alert-danger" role="alert">Error: @viewModel.Error</div>
        }
    }
</div>

<CurlRequestList Requests="viewModel.Requests" ServiceConfig="viewModel.TextApiConfig" />
