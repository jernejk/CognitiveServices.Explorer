@using CognitiveServices.Explorer.Application.Text
@using CognitiveServices.Explorer.Domain.Text
@using Newtonsoft.Json

@if (_response != null)
{
    <div class="mb-3">
        <h4>Named Entities analysis</h4>
            @foreach (var document in _response.documents)
            {
            <div style="width: 100%">
                <span style="font-weight: bold">Document ID:</span> @document.id<br />
                @if (!string.IsNullOrWhiteSpace(_response.modelVersion))
                {
                    <span style="font-weight: bold">Model version:</span> @_response.modelVersion<br />
                }

                @foreach (var entity in document.entities)
                {
                    <div class="mt-3">
                        @if (TextApiVersion != TextRequestGenerator.LegacyVersion)
                        {
                            <span style="font-weight: bold">Text: </span>@entity.text<br />
                            <span style="font-weight: bold">Category: </span>@entity.category<br />
                            <span style="font-weight: bold">Position: </span>@($"{entity.offset} - {entity.offset + entity.length}")<br />
                            <span style="font-weight: bold">Score: </span>@($"{Math.Round(entity.confidenceScore * 100, 2)}%")
                        }
                        else
                        {
                            <span style="font-weight: bold">Name: </span>@entity.name<br />
                            <span style="font-weight: bold">Type: </span>@entity.type<br />
                            if (!string.IsNullOrWhiteSpace(entity.wikipediaUrl))
                            {
                                <span style="font-weight: bold">Wiki link: </span><a href="@entity.wikipediaUrl" target="_blank">@entity.wikipediaUrl</a><br />
                                <span style="font-weight: bold">Wiki language: </span>@entity.wikipediaLanguage<br />
                            }
                        }
                    </div>
                }
            </div>
            }
    </div>
}

@code {
    private string? _responseJson = null;
    private TextApiResponse? _response = null;

    [Parameter]
    public string? ResponseJson
    {
        get { return _responseJson; }
        set
        {
            if (_responseJson != value)
            {
                _responseJson = value;
                if (_responseJson == null)
                {
                    _response = null;
                }
                else
                {
                    _response = JsonConvert.DeserializeObject<TextApiResponse>(_responseJson);
                }
            }
        }
    }

    [Parameter] public string TextApiVersion { get; set; } = TextRequestGenerator.StableVersion;
}
